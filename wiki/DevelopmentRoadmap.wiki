#summary The AudioSpread project Roadmap: comprising several milestones with each containing tickets.
#labels Development,Featured
= Development Roadmap =

<wiki:toc max_depth="2" />

---------
= 0.01 discovery, development tools, first setups =
== 0.01a Drupal, Asterisk, content creation Discovery ==
*Drupal team*
  * ~~MySQL database for Drupal~~ *DONE*
  * ~~Drupal installed~~ *DONE*
  * ~~CCK,bitcache,rdf,views module installed~~ *DONE*

*Asterisk team*
  * ~~[http://code.google.com/p/audiospread/issues/detail?id=7 Install Asterisk + an SIP softphone, call a local Asterisk sever over SIP with the softphone.]~~ *DONE*
*Content creation team*
  * ~~[http://code.google.com/p/audiospread/issues/detail?id=8 find a practical workflow to record/get & convert any audio files into mp3.]~~ *DONE*

---------
== 0.01b Server is ready for development (Live SVN+Asterisk+Drupal) ==
On our main server at rue de Grenelle (JBTV):
  * ~~LAMP stack installed (Ubuntu)~~ *DONE*
  * ~~network-specific requests made to ECE admin:~~ *SKIPPED*
    * ~~we have our own Ethernet plug hole & fixed IP~~ *DONE*
    * ~~SSH possible from within local area network~~ *DONE*
    * ~~SSH possible from outside~~ *DONE*
    * ~~create tunneler application for windows & linux that ships with binary-hidden authentication login & password. Tunneling for ssh,http,asterisk,mysql~~ *DONE*
  * ~~user accounts = same accounts used for committing~~ *DONE*
  * ~~LAMP~~*DONE* + Drupal installed
  * ~~Asterisk installed~~ *DONE*
  * ~~Live SVN for Asterisk files (config & sounds)~~ *DONE*
  * ~~Live SVN for Drupal&Apache's files~~ *DONE*
  * ~~Live SVN for Intracorp~~ *DONE*
_*Note:* we do no MySQL versioning. Mysql will have to be used remotely
  * ~~SVN syncing from server towards Google Code repo~~ *SKIPPED*
  * ~~Asterisk can be called from local area network and from outside with a softphone.~~ *DONE* with zoiper for IAX2.


---------------
= 0.02 First prototype preparation (for friday jan, 13th) = *DONE*
*We have to deliver this prototype on that date along with STBv2 and DA*
== Asterisk prototype ==
~~Code an extensions.conf file which will enable an user to :~~ *DONE*
  # ~~listen to a welcome menu (sentence pronounced by a voice)~~ *DONE*
  # ~~listen to the voice enumerating the different programs available~~ *DONE*
  # ~~navigate through the different programs(music for example)~~ *DONE*
  # ~~read a program and use controls : pause/rewind/forward/previous/next~~ *DONE*
  # ~~exit to welcome menu~~ *DONE*

== Drupal prototype ==
~~details skipped~~ *DONE*

-------------
== 0.03 All module teams ready to develop & test ==

  * Roadmap has some first steps/tickets for development that can be started.
  * Everyone knows how to work with:
    * the roadmap which contains tasks for a long time,
    * svn update, commit, conflicts, (branch & tags,)
    * code reviews & requests for reviews (while commit messages). See [http://code.google.com/p/support/wiki/CodeReviews here].
    * SSH tunneling through ECE's gandalf *TODO Asterisk team*
  * Testing team and other development teams are ready (SIP+Softphone/Drupal account created).
  * Team knows how to follow agile development cycles.


== 0.04 Cycle==

===Drupal ===
==D.a. actors can manage content==
===D.a.1. as an anonymous,user,contributor,publisher,editor I can see, browse and add/delete programs and categories to a content tree===

Drupal team, see if you should have more or less work. Note there's no business manager work below.
if you focus on content management for now (this breaks teams..) a TODO can be to have programs' audio files really playable online (no full download) or to see how future deployment will have to be done with pattern module.

Tickets (for use case D.a.1., to be done during the cycle)


*D.a.1.1.* install outline module. *done* 

exists new version now (do you want install the newer dev release + keep the outline.module aside for inspiration because jonathan's modified it a little ?)


*D.a.1.2.* create an example tree out of the outline module's existing features (ok for now


D.a.1.2. outline tree is viewed at user-friendly location on page layout and is easily click-browsable by actors.
D.a.1.3.1. PHP:a category node can only have certain types of children:
- if it has no children yet:
- a "add child program" button
if category node is not already a sub-category:
- a "add child category" button
- if it has children:
- if those children are categories:
- a "add child category" button
- else it has program categories:
- a "add child program" button
D.a.1.3.2. PHP: a category node cannot have any children
D.a.1.3.3. category and program nodes can be removed
D.a.1.4. permissions for above actions are set for each each role:anonymous,user,contributor,editor,publisher.

Bugs (for use case D.a.1.)
None for now.

< Inter-servers >
//sorry not really use-cases-based here
I.a. audio files are synced between servers and in a user+asterisk-friendly format as soon as user contribute contents (user goal)
I.a.1. after a caller records a file, store file locally + send that file into the Drupal "submissions" folder (use case)

Tickets (for I.a.1.)
I.a.1.1. sample extension for recording into the Asterisk's "submissions" magical folder with filename containing caller-id and username if known.
I.a.1.2. magical Asterisk's "submissions" folder bi-directional syncs with Drupal's "submissions" folder
I.a.1.3. Drupal cron-checks "submissions" folder and adds/removes nodes to reflect folder in Drupal DB/ Drupal's interface "submissions" section
//that's ok for a cycle

Bugs (for I.a.1.)
None for now.


Asterisk
up to Asterisk team to decide. Things to do can be: work on asterisk realtime understanding, and other thing: continue extensions.conf to add bookmarking(requires db, for later maybe), help info and content submission.
You'll want Elie to record new stuff or not maybe.

==A.a. Scenario: Asterisk realtime setup==
===A.a.1. Content can be browsed from MySQL database thanks to Asterisk realtime for extensions.conf===
A.a.2. Asterisk SOAP api full installation
A.a.3. PHPMyAdmin Tests of user+extensions db from Asterisk SOAP api setup
A.a.4. User of Asterisk SOAP api from a standalone SOAP client.

Bugs
None for now.